<project name='project' pubsub='auto' threads='1' use-tagged-token='true'>
<description> 
	This example project is a basic demonstration of using the streaming
	Pearson's correlation algorithm in a calculate window. Pearson's correlation
	coefficient is the most common measure of how data correlate with one another.
	It show the linear relationship between two sets of data. 

	This project contains a single continuous query composed of the following: 
	1.	A source window that receives the data to be analyzed
	2.	A calculate window that calculates the correlation between two variables
		from an incoming data stream and publishes the events in real time
</description>
<contqueries>
  <contquery name='contquery' trace='w_calculate'>
   <windows>
    <window-source name='w_source' insert-only='true' autogen-key='false' index='pi_EMPTY'> 
     <description>
       This source window receives the included example input data via a file
	socket connector. The input stream is placed into three fields for each
	observation read: an ID that acts as the data stream's key, named id;,
	an x coordinate of data named x_c;, and a y coordinate of data named y_c.
     </description>
     <schema>
      <fields>
       <field name='id'  type='int64' key='true'/>
       <field name='x_c' type='double'/>
       <field name='y_c' type='double'/>
      </fields>
     </schema>
     <connectors>
      <connector class='fs' name='publisher'>
       <properties>
        <property name='type'>pub</property>
        <property name='fstype'>csv</property>
        <property name='fsname'>input.csv</property>
        <property name='transactional'>true</property>
        <property name='blocksize'>1</property>
       </properties>
      </connector>
     </connectors>
    </window-source>

    <window-calculate name="w_calculate" algorithm="Correlation" index='pi_EMPTY'> 
      <description> 
    	The calculate window, w_calculate receives data events including the
	values of two variables. It then applies the correlation algorithm to 
	compute the Pearson's correlation coefficient between the two input variables.
	It publishes the calculated correlation according to the specified algorithm 
	parameters and properties. In this example, the following algorithm parameters 
	govern the correlation algorithm: 

	windowLength:	Specifies the length of the sliding window. 

	Additionally, the following input-map and output map properties define the
	correlation algorithm in this calculate window: 

	x:		Specifies the input variable X by it name in the source schema.
	y:		Specifies the input variable Y by its name in the source schema.

	corOut:		Specifies the name of the output variable for the correlation
			between X and Y input variables. 

	The computed correlation values are written to the file result.out via a
	file socket connector.
      </description>
      <schema>
          <fields>
          <field name='id' type='int64' key='true'/>
          <field name='y_c' type='double'/>
          <field name='x_c' type='double'/>
          <field name='corOut' type='double'/>
        </fields>
      </schema>
        <parameters>
          <properties>
           <property name="windowLength">5</property>
          </properties>
        </parameters>
        <input-map>
          <properties>
           <property name="x">x_c</property>
           <property name="y">y_c</property>
          </properties>
        </input-map>
        <output-map>
          <properties>
           <property name="corOut">corOut</property>
          </properties>
        </output-map>
     <connectors>
      <connector class='fs' name='sub'>
       <properties>
        <property name='type'>sub</property>
        <property name='fstype'>csv</property>
        <property name='fsname'>result.out</property>
        <property name='snapshot'>true</property> 
        <property name='header'>true</property>
       </properties>
      </connector>
     </connectors>
    </window-calculate>
   </windows>
   <edges>
    <edge source='w_source' target='w_calculate' role='data'/>
   </edges>
  </contquery>
</contqueries>
</project>
