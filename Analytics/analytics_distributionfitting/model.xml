<project name='project' pubsub='auto' threads='1' use-tagged-token='true'> 
<description> 
	This example is a basic demonstration of using the Distribution Fitting
	algorithm. This algorithm supports fitting a Weibull, Gamma, or Normal 
	distribution to a variable in the incoming data stream. 
	
	This project contains a single continuous query consisting of the following:
	1.	A source window that receives the data to be analyzed 
	2.	A calculate window that fits a Weibull distribution to a variable
		from an incoming data stream and publishes the variable's functional
		parameters as results.
</description>
<contqueries>
  <contquery name='contquery' trace='w_calculate'>
   <windows>
    <window-source name='w_source' insert-only='true' autogen-key='false'> 
     <description> 
	This source window receives the included example input data file via a file
	socket connector. The input data stream is placed into three fields for each
	observation: an ID that acts as the data stream's key, named id; an x coordinate
	of data, named x_c; and a y coordinate of data, named y_c.
     </description>
     <schema>
      <fields>
       <field name='id'  type='int64' key='true'/>
       <field name='x_c' type='double'/>
       <field name='y_c' type='double'/>
      </fields>
     </schema>
     <connectors>
      <connector class='fs' name='publisher'>
       <properties>
        <property name='type'>pub</property>
        <property name='fstype'>csv</property>
        <property name='fsname'>input.csv</property>
        <property name='transactional'>true</property>
        <property name='blocksize'>1</property>
       </properties>
      </connector>
     </connectors>
    </window-source>

    <window-calculate name="w_calculate" algorithm="DistributionFitting"> 
      <description> 
	This calculate window receives data events from the source window. It publishes
	the beta, alpha, and mu parameters of the Weibull probability density function 
	for the specified x variable. In this example, the following algorithm parameters
	govern the distribution fitting algorithm:

	windowLength:		Specifies the length of the sliding window. The value
				specified must be greater than the value of overlap.
	overlap:		Specifies the overlap between consecutive windows. This
				must be strictly less than windowLength. 
	maxIter:		Specifies the maximum number of iterations.
	distribution:		Specifies the type of probability distribution to fit. 

	Additionally, the following input-map and output-map properties define this
	calculate window: 

	x:			Specifies the intput variable for distribution fitting. 

	betaOut:		Specifies the output variable name for parameter beta.
	alphaOut:		Specifies the output variable name for parameter alpha.
	muOut:			Specifies the output variable name for parameter mu. 
	convergeOut:		Specifies the output variable name that indicates whether
				convergence is attained. In the output, a value of 1 will
				appear when computation has converged, and will be 0 otherwise. 

	The resulting output is written to the file result.out via a file socket connector.
      </description>
      <schema>
          <fields>
          <field name='id' type='int64' key='true'/>
          <field name='y_c' type='double'/>
          <field name='x_c' type='double'/>
          <field name='betaOut' type='double'/>
          <field name='alphaOut' type='double'/>
          <field name='muOut' type='double'/>
          <field name='convergeOut' type='int64'/>
        </fields>
      </schema>
        <parameters>
          <properties>
           <property name="windowLength">5</property>
           <property name="overlap">2</property>
           <property name="maxIter">50</property>
           <property name="distribution">Weibull</property>
          </properties>
        </parameters>
        <input-map>
          <properties>
           <property name="x">x_c</property>
          </properties>
        </input-map>
        <output-map>
          <properties>
           <property name="betaOut">betaOut</property>
           <property name="alphaOut">alphaOut</property>
           <property name="muOut">muOut</property>
           <property name="convergeOut">convergeOut</property>
          </properties>
        </output-map>
     <connectors>
      <connector class='fs' name='sub'>
       <properties>
        <property name='type'>sub</property>
        <property name='fstype'>csv</property>
        <property name='fsname'>result.out</property>
        <property name='snapshot'>true</property> 
        <property name='header'>true</property>
       </properties>
      </connector>
     </connectors>
    </window-calculate>
   </windows>
   <edges>
    <edge source='w_source' target='w_calculate' role='data'/>
   </edges>
  </contquery>
</contqueries>
</project>
